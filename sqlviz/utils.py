# AUTOGENERATED! DO NOT EDIT! File to edit: ../00_utils.ipynb.

# %% auto 0
__all__ = ['CREDS', 'Q', 'css2name', 'color_vals', 'colors', 'color_map', 'rect', 'to_img']

# %% ../00_utils.ipynb 3
from fastcore.utils import *
from fastcore.test import *
from PIL import Image
from matplotlib import cm
from matplotlib.colors import LinearSegmentedColormap
import numpy as np

# %% ../00_utils.ipynb 5
CREDS = {
    "host" : "localhost",
    "database" : "rorymccallion",
    "user" : "rorymccallion" 
}

# %% ../00_utils.ipynb 7
Q = [
    """select 1""",
    
    """select email, url from pageviews limit 5""",
    
    """select
  c1,
  c2 as "foo",
  c3+c4 as "bar",
  count(distinct things)
from pageviews pv
join users u using (user_id)
left join accounts a on (u.account_id = a.id)
where c5 > 0
  and c6 is not null
group by c1
having count(distinct things) > 1
order by count(distinct things)
limit 5""",
    
    """select
  accountid as account_id,
  closedate as close_date,
  company_industry_group__c as industry,
  amount
from opportunity_raw
where iswon
  and amount > 0""",
]

# %% ../00_utils.ipynb 10
css2name = {
    'white'             : 'white',
    'whitesmoke'        : 'lightgrey',
    'lightgrey'         : 'grey',
    'grey'              : 'darkgrey',
    'black'             : 'black',
    'midnightblue'      : 'darkblue',
    'blue'              : 'blue',
    'darkviolet'        : 'purple',
    'violet'            : 'pink',
    'magenta'           : 'magenta',
    'deeppink'          : 'deeppink',
    'tomato'            : 'red',
    'darkorange'        : 'orange',
    'gold'              : 'gold',
    'yellow'            : 'yellow',
    'chartreuse'        : 'lime',
    'lime'              : 'green',
    'mediumspringgreen' : 'bluegreen',
    'aquamarine'        : 'mint',
    'cyan'              : 'cyan',
    'beige'             : 'beige',
}

# %% ../00_utils.ipynb 13
color_vals = [x/100 for x in range(0, len(css2name)*5, 5)]
colors = {k:v for k,v in zip(list(css2name.values()), color_vals)}

# %% ../00_utils.ipynb 14
color_map = LinearSegmentedColormap.from_list(
    "Colors are mapped to floats between 0 and 1",
    list(css2name.keys()))

# %% ../00_utils.ipynb 17
def rect(hw, color):
    return np.ones(hw) * colors[color]

def to_img(array, reduce_by=1) -> Image:
    img = Image.fromarray(color_map(array, bytes=True))
    return img.reduce(reduce_by)
